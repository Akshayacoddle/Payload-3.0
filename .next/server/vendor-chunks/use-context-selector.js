"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-context-selector";
exports.ids = ["vendor-chunks/use-context-selector"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-context-selector/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/use-context-selector/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeProvider: () => (/* binding */ BridgeProvider),\n/* harmony export */   createContext: () => (/* binding */ createContext),\n/* harmony export */   useBridgeValue: () => (/* binding */ useBridgeValue),\n/* harmony export */   useContext: () => (/* binding */ useContext),\n/* harmony export */   useContextSelector: () => (/* binding */ useContextSelector),\n/* harmony export */   useContextUpdate: () => (/* binding */ useContextUpdate)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\nconst isSSR = typeof window === 'undefined' ||\n    /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_runWithPriority\n    ? (fn) => {\n        try {\n            (0,scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_runWithPriority)(scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_NormalPriority, fn);\n        }\n        catch (e) {\n            if (e.message === 'Not implemented.') {\n                fn();\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    : (fn) => fn();\nconst createProvider = (ProviderOrig) => {\n    const ContextProvider = ({ value, children, }) => {\n        const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n        const versionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n        const [resolve, setResolve] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n        if (resolve) {\n            resolve(value);\n            setResolve(null);\n        }\n        const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n        if (!contextValue.current) {\n            const listeners = new Set();\n            const update = (fn, options) => {\n                versionRef.current += 1;\n                const action = {\n                    n: versionRef.current,\n                };\n                if (options === null || options === void 0 ? void 0 : options.suspense) {\n                    action.n *= -1; // this is intentional to make it temporary version\n                    action.p = new Promise((r) => {\n                        setResolve(() => (v) => {\n                            action.v = v;\n                            delete action.p;\n                            r(v);\n                        });\n                    });\n                }\n                listeners.forEach((listener) => listener(action));\n                fn();\n            };\n            contextValue.current = {\n                [CONTEXT_VALUE]: {\n                    /* \"v\"alue     */ v: valueRef,\n                    /* versio\"n\"   */ n: versionRef,\n                    /* \"l\"isteners */ l: listeners,\n                    /* \"u\"pdate    */ u: update,\n                },\n            };\n        }\n        useIsomorphicLayoutEffect(() => {\n            valueRef.current = value;\n            versionRef.current += 1;\n            runWithNormalPriority(() => {\n                contextValue.current[CONTEXT_VALUE].l.forEach((listener) => {\n                    listener({ n: versionRef.current, v: value });\n                });\n            });\n        }, [value]);\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProviderOrig, { value: contextValue.current }, children);\n    };\n    return ContextProvider;\n};\nconst identity = (x) => x;\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nfunction createContext(defaultValue) {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n        [CONTEXT_VALUE]: {\n            /* \"v\"alue     */ v: { current: defaultValue },\n            /* versio\"n\"   */ n: { current: -1 },\n            /* \"l\"isteners */ l: new Set(),\n            /* \"u\"pdate    */ u: (f) => f(),\n        },\n    });\n    context[ORIGINAL_PROVIDER] = context.Provider;\n    context.Provider = createProvider(context.Provider);\n    delete context.Consumer; // no support for Consumer\n    return context;\n}\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, (state) => state.firstName);\n */\nfunction useContextSelector(context, selector) {\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context)[CONTEXT_VALUE];\n    if (typeof process === 'object' && \"development\" !== 'production') {\n        if (!contextValue) {\n            throw new Error('useContextSelector requires special context');\n        }\n    }\n    const { \n    /* \"v\"alue     */ v: { current: value }, \n    /* versio\"n\"   */ n: { current: version }, \n    /* \"l\"isteners */ l: listeners, } = contextValue;\n    const selected = selector(value);\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((prev, action) => {\n        if (!action) {\n            // case for `dispatch()` below\n            return [value, selected];\n        }\n        if ('p' in action) {\n            throw action.p;\n        }\n        if (action.n === version) {\n            if (Object.is(prev[1], selected)) {\n                return prev; // bail out\n            }\n            return [value, selected];\n        }\n        try {\n            if ('v' in action) {\n                if (Object.is(prev[0], action.v)) {\n                    return prev; // do not update\n                }\n                const nextSelected = selector(action.v);\n                if (Object.is(prev[1], nextSelected)) {\n                    return prev; // do not update\n                }\n                return [action.v, nextSelected];\n            }\n        }\n        catch (_e) {\n            // ignored (stale props or some other reason)\n        }\n        return [...prev]; // schedule update\n    }, [value, selected]);\n    if (!Object.is(state[1], selected)) {\n        // schedule re-render\n        // this is safe because it's self contained\n        dispatch();\n    }\n    useIsomorphicLayoutEffect(() => {\n        listeners.add(dispatch);\n        return () => {\n            listeners.delete(dispatch);\n        };\n    }, [listeners]);\n    return state[1];\n}\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nfunction useContext(context) {\n    return useContextSelector(context, identity);\n}\n/**\n * This hook returns an update function to wrap an updating function\n *\n * Use this for a function that will change a value in\n * concurrent rendering in React 18.\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n *\n * // Wrap set state function\n * update(() => setState(...));\n *\n * // Experimental suspense mode\n * update(() => setState(...), { suspense: true });\n */\nfunction useContextUpdate(context) {\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context)[CONTEXT_VALUE];\n    if (typeof process === 'object' && \"development\" !== 'production') {\n        if (!contextValue) {\n            throw new Error('useContextUpdate requires special context');\n        }\n    }\n    const { u: update } = contextValue;\n    return update;\n}\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nconst BridgeProvider = ({ context, value, children, }) => {\n    const { [ORIGINAL_PROVIDER]: ProviderOrig } = context;\n    if (typeof process === 'object' && \"development\" !== 'production') {\n        if (!ProviderOrig) {\n            throw new Error('BridgeProvider requires special context');\n        }\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProviderOrig, { value }, children);\n};\n/**\n * This hook return a value for BridgeProvider\n */\nconst useBridgeValue = (context) => {\n    const bridgeValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n    if (typeof process === 'object' && \"development\" !== 'production') {\n        if (!bridgeValue[CONTEXT_VALUE]) {\n            throw new Error('useBridgeValue requires special context');\n        }\n    }\n    return bridgeValue;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLWNvbnRleHQtc2VsZWN0b3IvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtSztBQUMvQztBQUNwSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyw0Q0FBUyxHQUFHLGtEQUFlO0FBQ3JFO0FBQ0EsOEJBQThCLCtEQUFlO0FBQzdDO0FBQ0E7QUFDQSxZQUFZLG1FQUFlLENBQUMsOERBQWM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtCQUFrQjtBQUNqRCx5QkFBeUIsNkNBQU07QUFDL0IsMkJBQTJCLDZDQUFNO0FBQ2pDLHNDQUFzQywrQ0FBUTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2Q0FBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlDQUFpQztBQUNoRSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVCxlQUFlLG9EQUFhLGlCQUFpQiw2QkFBNkI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0EseUNBQXlDLCtCQUErQjtBQUN4RTtBQUNPO0FBQ1Asb0JBQW9CLG9EQUFpQjtBQUNyQztBQUNBLG1DQUFtQyx1QkFBdUI7QUFDMUQsbUNBQW1DLGFBQWE7QUFDaEQ7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBO0FBQ087QUFDUCx5QkFBeUIsaURBQWM7QUFDdkMsdUNBQXVDLGFBQW9CO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0JBQWdCO0FBQzNDLDJCQUEyQixrQkFBa0I7QUFDN0Msc0NBQXNDO0FBQ3RDO0FBQ0EsOEJBQThCLGlEQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksYUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsZ0JBQWdCO0FBQ2pEO0FBQ087QUFDUCx5QkFBeUIsaURBQWM7QUFDdkMsdUNBQXVDLGFBQW9CO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGVBQWUsT0FBTyxjQUFjO0FBQ3BFLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQiwyQkFBMkI7QUFDNUQsWUFBWSxvQ0FBb0M7QUFDaEQsdUNBQXVDLGFBQW9CO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYSxpQkFBaUIsT0FBTztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLGlEQUFjO0FBQ3RDLHVDQUF1QyxhQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWxhdGVzdC1zdGFydGVyLy4vbm9kZV9tb2R1bGVzL3VzZS1jb250ZXh0LXNlbGVjdG9yL2Rpc3QvaW5kZXguanM/N2I0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBjcmVhdGVDb250ZXh0IGFzIGNyZWF0ZUNvbnRleHRPcmlnLCB1c2VDb250ZXh0IGFzIHVzZUNvbnRleHRPcmlnLCB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCwgdXNlUmVkdWNlciwgdXNlUmVmLCB1c2VTdGF0ZSwgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSBhcyBOb3JtYWxQcmlvcml0eSwgdW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IGFzIHJ1bldpdGhQcmlvcml0eSwgfSBmcm9tICdzY2hlZHVsZXInO1xuY29uc3QgQ09OVEVYVF9WQUxVRSA9IFN5bWJvbCgpO1xuY29uc3QgT1JJR0lOQUxfUFJPVklERVIgPSBTeW1ib2woKTtcbmNvbnN0IGlzU1NSID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICAvU2VydmVyU2lkZVJlbmRlcmluZy8udGVzdCh3aW5kb3cubmF2aWdhdG9yICYmIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtcbmNvbnN0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSBpc1NTUiA/IHVzZUVmZmVjdCA6IHVzZUxheW91dEVmZmVjdDtcbi8vIGZvciBwcmVhY3QgdGhhdCBkb2Vzbid0IGhhdmUgcnVuV2l0aFByaW9yaXR5XG5jb25zdCBydW5XaXRoTm9ybWFsUHJpb3JpdHkgPSBydW5XaXRoUHJpb3JpdHlcbiAgICA/IChmbikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcnVuV2l0aFByaW9yaXR5KE5vcm1hbFByaW9yaXR5LCBmbik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlLm1lc3NhZ2UgPT09ICdOb3QgaW1wbGVtZW50ZWQuJykge1xuICAgICAgICAgICAgICAgIGZuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIDogKGZuKSA9PiBmbigpO1xuY29uc3QgY3JlYXRlUHJvdmlkZXIgPSAoUHJvdmlkZXJPcmlnKSA9PiB7XG4gICAgY29uc3QgQ29udGV4dFByb3ZpZGVyID0gKHsgdmFsdWUsIGNoaWxkcmVuLCB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlUmVmID0gdXNlUmVmKHZhbHVlKTtcbiAgICAgICAgY29uc3QgdmVyc2lvblJlZiA9IHVzZVJlZigwKTtcbiAgICAgICAgY29uc3QgW3Jlc29sdmUsIHNldFJlc29sdmVdID0gdXNlU3RhdGUobnVsbCk7XG4gICAgICAgIGlmIChyZXNvbHZlKSB7XG4gICAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgICAgIHNldFJlc29sdmUobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlUmVmKCk7XG4gICAgICAgIGlmICghY29udGV4dFZhbHVlLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGxpc3RlbmVycyA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZSA9IChmbiwgb3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgICAgIHZlcnNpb25SZWYuY3VycmVudCArPSAxO1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IHtcbiAgICAgICAgICAgICAgICAgICAgbjogdmVyc2lvblJlZi5jdXJyZW50LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zdXNwZW5zZSkge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb24ubiAqPSAtMTsgLy8gdGhpcyBpcyBpbnRlbnRpb25hbCB0byBtYWtlIGl0IHRlbXBvcmFyeSB2ZXJzaW9uXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbi5wID0gbmV3IFByb21pc2UoKHIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJlc29sdmUoKCkgPT4gKHYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb24udiA9IHY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGFjdGlvbi5wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIodik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4gbGlzdGVuZXIoYWN0aW9uKSk7XG4gICAgICAgICAgICAgICAgZm4oKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb250ZXh0VmFsdWUuY3VycmVudCA9IHtcbiAgICAgICAgICAgICAgICBbQ09OVEVYVF9WQUxVRV06IHtcbiAgICAgICAgICAgICAgICAgICAgLyogXCJ2XCJhbHVlICAgICAqLyB2OiB2YWx1ZVJlZixcbiAgICAgICAgICAgICAgICAgICAgLyogdmVyc2lvXCJuXCIgICAqLyBuOiB2ZXJzaW9uUmVmLFxuICAgICAgICAgICAgICAgICAgICAvKiBcImxcImlzdGVuZXJzICovIGw6IGxpc3RlbmVycyxcbiAgICAgICAgICAgICAgICAgICAgLyogXCJ1XCJwZGF0ZSAgICAqLyB1OiB1cGRhdGUsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgICAgICB2YWx1ZVJlZi5jdXJyZW50ID0gdmFsdWU7XG4gICAgICAgICAgICB2ZXJzaW9uUmVmLmN1cnJlbnQgKz0gMTtcbiAgICAgICAgICAgIHJ1bldpdGhOb3JtYWxQcmlvcml0eSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29udGV4dFZhbHVlLmN1cnJlbnRbQ09OVEVYVF9WQUxVRV0ubC5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lcih7IG46IHZlcnNpb25SZWYuY3VycmVudCwgdjogdmFsdWUgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgW3ZhbHVlXSk7XG4gICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFByb3ZpZGVyT3JpZywgeyB2YWx1ZTogY29udGV4dFZhbHVlLmN1cnJlbnQgfSwgY2hpbGRyZW4pO1xuICAgIH07XG4gICAgcmV0dXJuIENvbnRleHRQcm92aWRlcjtcbn07XG5jb25zdCBpZGVudGl0eSA9ICh4KSA9PiB4O1xuLyoqXG4gKiBUaGlzIGNyZWF0ZXMgYSBzcGVjaWFsIGNvbnRleHQgZm9yIGB1c2VDb250ZXh0U2VsZWN0b3JgLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSAndXNlLWNvbnRleHQtc2VsZWN0b3InO1xuICpcbiAqIGNvbnN0IFBlcnNvbkNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHsgZmlyc3ROYW1lOiAnJywgZmFtaWx5TmFtZTogJycgfSk7XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSBjcmVhdGVDb250ZXh0T3JpZyh7XG4gICAgICAgIFtDT05URVhUX1ZBTFVFXToge1xuICAgICAgICAgICAgLyogXCJ2XCJhbHVlICAgICAqLyB2OiB7IGN1cnJlbnQ6IGRlZmF1bHRWYWx1ZSB9LFxuICAgICAgICAgICAgLyogdmVyc2lvXCJuXCIgICAqLyBuOiB7IGN1cnJlbnQ6IC0xIH0sXG4gICAgICAgICAgICAvKiBcImxcImlzdGVuZXJzICovIGw6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIC8qIFwidVwicGRhdGUgICAgKi8gdTogKGYpID0+IGYoKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb250ZXh0W09SSUdJTkFMX1BST1ZJREVSXSA9IGNvbnRleHQuUHJvdmlkZXI7XG4gICAgY29udGV4dC5Qcm92aWRlciA9IGNyZWF0ZVByb3ZpZGVyKGNvbnRleHQuUHJvdmlkZXIpO1xuICAgIGRlbGV0ZSBjb250ZXh0LkNvbnN1bWVyOyAvLyBubyBzdXBwb3J0IGZvciBDb25zdW1lclxuICAgIHJldHVybiBjb250ZXh0O1xufVxuLyoqXG4gKiBUaGlzIGhvb2sgcmV0dXJucyBjb250ZXh0IHNlbGVjdGVkIHZhbHVlIGJ5IHNlbGVjdG9yLlxuICpcbiAqIEl0IHdpbGwgb25seSBhY2NlcHQgY29udGV4dCBjcmVhdGVkIGJ5IGBjcmVhdGVDb250ZXh0YC5cbiAqIEl0IHdpbGwgdHJpZ2dlciByZS1yZW5kZXIgaWYgb25seSB0aGUgc2VsZWN0ZWQgdmFsdWUgaXMgcmVmZXJlbnRpYWxseSBjaGFuZ2VkLlxuICpcbiAqIFRoZSBzZWxlY3RvciBzaG91bGQgcmV0dXJuIHJlZmVyZW50aWFsbHkgZXF1YWwgcmVzdWx0IGZvciBzYW1lIGlucHV0IGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IHVzZUNvbnRleHRTZWxlY3RvciB9IGZyb20gJ3VzZS1jb250ZXh0LXNlbGVjdG9yJztcbiAqXG4gKiBjb25zdCBmaXJzdE5hbWUgPSB1c2VDb250ZXh0U2VsZWN0b3IoUGVyc29uQ29udGV4dCwgKHN0YXRlKSA9PiBzdGF0ZS5maXJzdE5hbWUpO1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udGV4dFNlbGVjdG9yKGNvbnRleHQsIHNlbGVjdG9yKSB7XG4gICAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dE9yaWcoY29udGV4dClbQ09OVEVYVF9WQUxVRV07XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghY29udGV4dFZhbHVlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUNvbnRleHRTZWxlY3RvciByZXF1aXJlcyBzcGVjaWFsIGNvbnRleHQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB7IFxuICAgIC8qIFwidlwiYWx1ZSAgICAgKi8gdjogeyBjdXJyZW50OiB2YWx1ZSB9LCBcbiAgICAvKiB2ZXJzaW9cIm5cIiAgICovIG46IHsgY3VycmVudDogdmVyc2lvbiB9LCBcbiAgICAvKiBcImxcImlzdGVuZXJzICovIGw6IGxpc3RlbmVycywgfSA9IGNvbnRleHRWYWx1ZTtcbiAgICBjb25zdCBzZWxlY3RlZCA9IHNlbGVjdG9yKHZhbHVlKTtcbiAgICBjb25zdCBbc3RhdGUsIGRpc3BhdGNoXSA9IHVzZVJlZHVjZXIoKHByZXYsIGFjdGlvbikgPT4ge1xuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgLy8gY2FzZSBmb3IgYGRpc3BhdGNoKClgIGJlbG93XG4gICAgICAgICAgICByZXR1cm4gW3ZhbHVlLCBzZWxlY3RlZF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCdwJyBpbiBhY3Rpb24pIHtcbiAgICAgICAgICAgIHRocm93IGFjdGlvbi5wO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3Rpb24ubiA9PT0gdmVyc2lvbikge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5pcyhwcmV2WzFdLCBzZWxlY3RlZCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJldjsgLy8gYmFpbCBvdXRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbdmFsdWUsIHNlbGVjdGVkXTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCd2JyBpbiBhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmlzKHByZXZbMF0sIGFjdGlvbi52KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldjsgLy8gZG8gbm90IHVwZGF0ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBuZXh0U2VsZWN0ZWQgPSBzZWxlY3RvcihhY3Rpb24udik7XG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5pcyhwcmV2WzFdLCBuZXh0U2VsZWN0ZWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmV2OyAvLyBkbyBub3QgdXBkYXRlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBbYWN0aW9uLnYsIG5leHRTZWxlY3RlZF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9lKSB7XG4gICAgICAgICAgICAvLyBpZ25vcmVkIChzdGFsZSBwcm9wcyBvciBzb21lIG90aGVyIHJlYXNvbilcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gWy4uLnByZXZdOyAvLyBzY2hlZHVsZSB1cGRhdGVcbiAgICB9LCBbdmFsdWUsIHNlbGVjdGVkXSk7XG4gICAgaWYgKCFPYmplY3QuaXMoc3RhdGVbMV0sIHNlbGVjdGVkKSkge1xuICAgICAgICAvLyBzY2hlZHVsZSByZS1yZW5kZXJcbiAgICAgICAgLy8gdGhpcyBpcyBzYWZlIGJlY2F1c2UgaXQncyBzZWxmIGNvbnRhaW5lZFxuICAgICAgICBkaXNwYXRjaCgpO1xuICAgIH1cbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgbGlzdGVuZXJzLmFkZChkaXNwYXRjaCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBsaXN0ZW5lcnMuZGVsZXRlKGRpc3BhdGNoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbbGlzdGVuZXJzXSk7XG4gICAgcmV0dXJuIHN0YXRlWzFdO1xufVxuLyoqXG4gKiBUaGlzIGhvb2sgcmV0dXJucyB0aGUgZW50aXJlIGNvbnRleHQgdmFsdWUuXG4gKiBVc2UgdGhpcyBpbnN0ZWFkIG9mIFJlYWN0LnVzZUNvbnRleHQgZm9yIGNvbnNpc3RlbnQgYmVoYXZpb3IuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICd1c2UtY29udGV4dC1zZWxlY3Rvcic7XG4gKlxuICogY29uc3QgcGVyc29uID0gdXNlQ29udGV4dChQZXJzb25Db250ZXh0KTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnRleHQoY29udGV4dCkge1xuICAgIHJldHVybiB1c2VDb250ZXh0U2VsZWN0b3IoY29udGV4dCwgaWRlbnRpdHkpO1xufVxuLyoqXG4gKiBUaGlzIGhvb2sgcmV0dXJucyBhbiB1cGRhdGUgZnVuY3Rpb24gdG8gd3JhcCBhbiB1cGRhdGluZyBmdW5jdGlvblxuICpcbiAqIFVzZSB0aGlzIGZvciBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBjaGFuZ2UgYSB2YWx1ZSBpblxuICogY29uY3VycmVudCByZW5kZXJpbmcgaW4gUmVhY3QgMTguXG4gKiBPdGhlcndpc2UsIHRoZXJlJ3Mgbm8gbmVlZCB0byB1c2UgdGhpcyBob29rLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyB1c2VDb250ZXh0VXBkYXRlIH0gZnJvbSAndXNlLWNvbnRleHQtc2VsZWN0b3InO1xuICpcbiAqIGNvbnN0IHVwZGF0ZSA9IHVzZUNvbnRleHRVcGRhdGUoKTtcbiAqXG4gKiAvLyBXcmFwIHNldCBzdGF0ZSBmdW5jdGlvblxuICogdXBkYXRlKCgpID0+IHNldFN0YXRlKC4uLikpO1xuICpcbiAqIC8vIEV4cGVyaW1lbnRhbCBzdXNwZW5zZSBtb2RlXG4gKiB1cGRhdGUoKCkgPT4gc2V0U3RhdGUoLi4uKSwgeyBzdXNwZW5zZTogdHJ1ZSB9KTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnRleHRVcGRhdGUoY29udGV4dCkge1xuICAgIGNvbnN0IGNvbnRleHRWYWx1ZSA9IHVzZUNvbnRleHRPcmlnKGNvbnRleHQpW0NPTlRFWFRfVkFMVUVdO1xuICAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoIWNvbnRleHRWYWx1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VDb250ZXh0VXBkYXRlIHJlcXVpcmVzIHNwZWNpYWwgY29udGV4dCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHsgdTogdXBkYXRlIH0gPSBjb250ZXh0VmFsdWU7XG4gICAgcmV0dXJuIHVwZGF0ZTtcbn1cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbi8qKlxuICogVGhpcyBpcyBhIFByb3ZpZGVyIGNvbXBvbmVudCBmb3IgYnJpZGdpbmcgbXVsdGlwbGUgcmVhY3Qgcm9vdHNcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgdmFsdWVUb0JyaWRnZSA9IHVzZUJyaWRnZVZhbHVlKFBlcnNvbkNvbnRleHQpO1xuICogcmV0dXJuIChcbiAqICAgPFJlbmRlcmVyPlxuICogICAgIDxCcmlkZ2VQcm92aWRlciBjb250ZXh0PXtQZXJzb25Db250ZXh0fSB2YWx1ZT17dmFsdWVUb0JyaWRnZX0+XG4gKiAgICAgICB7Y2hpbGRyZW59XG4gKiAgICAgPC9CcmlkZ2VQcm92aWRlcj5cbiAqICAgPC9SZW5kZXJlcj5cbiAqICk7XG4gKi9cbmV4cG9ydCBjb25zdCBCcmlkZ2VQcm92aWRlciA9ICh7IGNvbnRleHQsIHZhbHVlLCBjaGlsZHJlbiwgfSkgPT4ge1xuICAgIGNvbnN0IHsgW09SSUdJTkFMX1BST1ZJREVSXTogUHJvdmlkZXJPcmlnIH0gPSBjb250ZXh0O1xuICAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoIVByb3ZpZGVyT3JpZykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCcmlkZ2VQcm92aWRlciByZXF1aXJlcyBzcGVjaWFsIGNvbnRleHQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChQcm92aWRlck9yaWcsIHsgdmFsdWUgfSwgY2hpbGRyZW4pO1xufTtcbi8qKlxuICogVGhpcyBob29rIHJldHVybiBhIHZhbHVlIGZvciBCcmlkZ2VQcm92aWRlclxuICovXG5leHBvcnQgY29uc3QgdXNlQnJpZGdlVmFsdWUgPSAoY29udGV4dCkgPT4ge1xuICAgIGNvbnN0IGJyaWRnZVZhbHVlID0gdXNlQ29udGV4dE9yaWcoY29udGV4dCk7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghYnJpZGdlVmFsdWVbQ09OVEVYVF9WQUxVRV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndXNlQnJpZGdlVmFsdWUgcmVxdWlyZXMgc3BlY2lhbCBjb250ZXh0Jyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJyaWRnZVZhbHVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-context-selector/dist/index.js\n");

/***/ })

};
;