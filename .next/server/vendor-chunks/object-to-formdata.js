/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/object-to-formdata";
exports.ids = ["vendor-chunks/object-to-formdata"];
exports.modules = {

/***/ "(ssr)/./node_modules/object-to-formdata/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/object-to-formdata/src/index.js ***!
  \******************************************************/
/***/ ((module) => {

eval("function isUndefined(value) {\n  return value === undefined;\n}\n\nfunction isNull(value) {\n  return value === null;\n}\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\nfunction isObject(value) {\n  return value === Object(value);\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\nfunction isDate(value) {\n  return value instanceof Date;\n}\n\nfunction isBlob(value, isReactNative) {\n  return isReactNative\n    ? isObject(value) && !isUndefined(value.uri)\n    : isObject(value) &&\n        typeof value.size === 'number' &&\n        typeof value.type === 'string' &&\n        typeof value.slice === 'function';\n}\n\nfunction isFile(value, isReactNative) {\n  return (\n    isBlob(value, isReactNative) &&\n    typeof value.name === 'string' &&\n    (isObject(value.lastModifiedDate) || typeof value.lastModified === 'number')\n  );\n}\n\nfunction initCfg(value) {\n  return isUndefined(value) ? false : value;\n}\n\nfunction serialize(obj, cfg, fd, pre) {\n  cfg = cfg || {};\n  fd = fd || new FormData();\n\n  cfg.indices = initCfg(cfg.indices);\n  cfg.nullsAsUndefineds = initCfg(cfg.nullsAsUndefineds);\n  cfg.booleansAsIntegers = initCfg(cfg.booleansAsIntegers);\n  cfg.allowEmptyArrays = initCfg(cfg.allowEmptyArrays);\n  cfg.noAttributesWithArrayNotation = initCfg(\n    cfg.noAttributesWithArrayNotation,\n  );\n  cfg.noFilesWithArrayNotation = initCfg(cfg.noFilesWithArrayNotation);\n  cfg.dotsForObjectNotation = initCfg(cfg.dotsForObjectNotation);\n\n  const isReactNative = typeof fd.getParts === 'function';\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        let key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        if (\n          cfg.noAttributesWithArrayNotation ||\n          (cfg.noFilesWithArrayNotation && isFile(value, isReactNative))\n        ) {\n          key = pre;\n        }\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(cfg.noAttributesWithArrayNotation ? pre : pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isBlob(obj, isReactNative)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre\n        ? cfg.dotsForObjectNotation\n          ? pre + '.' + prop\n          : pre + '[' + prop + ']'\n        : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n}\n\nmodule.exports = {\n  serialize,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb2JqZWN0LXRvLWZvcm1kYXRhL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1sYXRlc3Qtc3RhcnRlci8uL25vZGVfbW9kdWxlcy9vYmplY3QtdG8tZm9ybWRhdGEvc3JjL2luZGV4LmpzP2YzZDUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGlzTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbic7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gT2JqZWN0KHZhbHVlKTtcbn1cblxuZnVuY3Rpb24gaXNBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGlzRGF0ZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBEYXRlO1xufVxuXG5mdW5jdGlvbiBpc0Jsb2IodmFsdWUsIGlzUmVhY3ROYXRpdmUpIHtcbiAgcmV0dXJuIGlzUmVhY3ROYXRpdmVcbiAgICA/IGlzT2JqZWN0KHZhbHVlKSAmJiAhaXNVbmRlZmluZWQodmFsdWUudXJpKVxuICAgIDogaXNPYmplY3QodmFsdWUpICYmXG4gICAgICAgIHR5cGVvZiB2YWx1ZS5zaXplID09PSAnbnVtYmVyJyAmJlxuICAgICAgICB0eXBlb2YgdmFsdWUudHlwZSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgdHlwZW9mIHZhbHVlLnNsaWNlID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc0ZpbGUodmFsdWUsIGlzUmVhY3ROYXRpdmUpIHtcbiAgcmV0dXJuIChcbiAgICBpc0Jsb2IodmFsdWUsIGlzUmVhY3ROYXRpdmUpICYmXG4gICAgdHlwZW9mIHZhbHVlLm5hbWUgPT09ICdzdHJpbmcnICYmXG4gICAgKGlzT2JqZWN0KHZhbHVlLmxhc3RNb2RpZmllZERhdGUpIHx8IHR5cGVvZiB2YWx1ZS5sYXN0TW9kaWZpZWQgPT09ICdudW1iZXInKVxuICApO1xufVxuXG5mdW5jdGlvbiBpbml0Q2ZnKHZhbHVlKSB7XG4gIHJldHVybiBpc1VuZGVmaW5lZCh2YWx1ZSkgPyBmYWxzZSA6IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBzZXJpYWxpemUob2JqLCBjZmcsIGZkLCBwcmUpIHtcbiAgY2ZnID0gY2ZnIHx8IHt9O1xuICBmZCA9IGZkIHx8IG5ldyBGb3JtRGF0YSgpO1xuXG4gIGNmZy5pbmRpY2VzID0gaW5pdENmZyhjZmcuaW5kaWNlcyk7XG4gIGNmZy5udWxsc0FzVW5kZWZpbmVkcyA9IGluaXRDZmcoY2ZnLm51bGxzQXNVbmRlZmluZWRzKTtcbiAgY2ZnLmJvb2xlYW5zQXNJbnRlZ2VycyA9IGluaXRDZmcoY2ZnLmJvb2xlYW5zQXNJbnRlZ2Vycyk7XG4gIGNmZy5hbGxvd0VtcHR5QXJyYXlzID0gaW5pdENmZyhjZmcuYWxsb3dFbXB0eUFycmF5cyk7XG4gIGNmZy5ub0F0dHJpYnV0ZXNXaXRoQXJyYXlOb3RhdGlvbiA9IGluaXRDZmcoXG4gICAgY2ZnLm5vQXR0cmlidXRlc1dpdGhBcnJheU5vdGF0aW9uLFxuICApO1xuICBjZmcubm9GaWxlc1dpdGhBcnJheU5vdGF0aW9uID0gaW5pdENmZyhjZmcubm9GaWxlc1dpdGhBcnJheU5vdGF0aW9uKTtcbiAgY2ZnLmRvdHNGb3JPYmplY3ROb3RhdGlvbiA9IGluaXRDZmcoY2ZnLmRvdHNGb3JPYmplY3ROb3RhdGlvbik7XG5cbiAgY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBmZC5nZXRQYXJ0cyA9PT0gJ2Z1bmN0aW9uJztcblxuICBpZiAoaXNVbmRlZmluZWQob2JqKSkge1xuICAgIHJldHVybiBmZDtcbiAgfSBlbHNlIGlmIChpc051bGwob2JqKSkge1xuICAgIGlmICghY2ZnLm51bGxzQXNVbmRlZmluZWRzKSB7XG4gICAgICBmZC5hcHBlbmQocHJlLCAnJyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzQm9vbGVhbihvYmopKSB7XG4gICAgaWYgKGNmZy5ib29sZWFuc0FzSW50ZWdlcnMpIHtcbiAgICAgIGZkLmFwcGVuZChwcmUsIG9iaiA/IDEgOiAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmQuYXBwZW5kKHByZSwgb2JqKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgaWYgKG9iai5sZW5ndGgpIHtcbiAgICAgIG9iai5mb3JFYWNoKCh2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IGtleSA9IHByZSArICdbJyArIChjZmcuaW5kaWNlcyA/IGluZGV4IDogJycpICsgJ10nO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICBjZmcubm9BdHRyaWJ1dGVzV2l0aEFycmF5Tm90YXRpb24gfHxcbiAgICAgICAgICAoY2ZnLm5vRmlsZXNXaXRoQXJyYXlOb3RhdGlvbiAmJiBpc0ZpbGUodmFsdWUsIGlzUmVhY3ROYXRpdmUpKVxuICAgICAgICApIHtcbiAgICAgICAgICBrZXkgPSBwcmU7XG4gICAgICAgIH1cblxuICAgICAgICBzZXJpYWxpemUodmFsdWUsIGNmZywgZmQsIGtleSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGNmZy5hbGxvd0VtcHR5QXJyYXlzKSB7XG4gICAgICBmZC5hcHBlbmQoY2ZnLm5vQXR0cmlidXRlc1dpdGhBcnJheU5vdGF0aW9uID8gcHJlIDogcHJlICsgJ1tdJywgJycpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0RhdGUob2JqKSkge1xuICAgIGZkLmFwcGVuZChwcmUsIG9iai50b0lTT1N0cmluZygpKTtcbiAgfSBlbHNlIGlmIChpc09iamVjdChvYmopICYmICFpc0Jsb2Iob2JqLCBpc1JlYWN0TmF0aXZlKSkge1xuICAgIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgY29uc3QgdmFsdWUgPSBvYmpbcHJvcF07XG5cbiAgICAgIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB3aGlsZSAocHJvcC5sZW5ndGggPiAyICYmIHByb3AubGFzdEluZGV4T2YoJ1tdJykgPT09IHByb3AubGVuZ3RoIC0gMikge1xuICAgICAgICAgIHByb3AgPSBwcm9wLnN1YnN0cmluZygwLCBwcm9wLmxlbmd0aCAtIDIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGtleSA9IHByZVxuICAgICAgICA/IGNmZy5kb3RzRm9yT2JqZWN0Tm90YXRpb25cbiAgICAgICAgICA/IHByZSArICcuJyArIHByb3BcbiAgICAgICAgICA6IHByZSArICdbJyArIHByb3AgKyAnXSdcbiAgICAgICAgOiBwcm9wO1xuXG4gICAgICBzZXJpYWxpemUodmFsdWUsIGNmZywgZmQsIGtleSk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgZmQuYXBwZW5kKHByZSwgb2JqKTtcbiAgfVxuXG4gIHJldHVybiBmZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNlcmlhbGl6ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/object-to-formdata/src/index.js\n");

/***/ })

};
;